// Name:            Utility
// Description:     Collection of useful utility classes to style your content
//
// Component:       `sb-container-*`
//                  `sb-clearfix`
//                  `sb-nbfc-*`
//                  `sb-float-*`
//                  `sb-align-*`
//                  `sb-vertical-align-*`
//                  `sb-height-*`
//                  `sb-responsive-*`
//                  `sb-margin-*`
//                  `sb-padding-*`
//                  `sb-border-*`
//                  `sb-heading-*`
//                  `sb-link-*`
//                  `sb-scrollable-*`
//                  `sb-overflow-*`
//                  `sb-position-*`
//                  `sb-display-*`
//                  `sb-visible-*`
//                  `sb-hidden-*`
//                  `sb-invisible`
//
// Used by:         Overlay
//
// ========================================================================


// Variables
// ========================================================================

$utility-container-max-width:                    980px !default;
$utility-container-padding-horizontal:           25px !default;

$utility-container-large-max-width:              1200px !default;
$utility-container-large-padding-horizontal:     35px !default;

$utility-align-horizontal:                       15px !default;
$utility-align-vertical:                         15px !default;

$utility-height-viewport-min-height:             600px !default;

$utility-margin:                                 15px !default;
$utility-margin-small:                           5px !default;
$utility-margin-large:                           50px !default;

$utility-border-rounded:                         5px !default;

$utility-heading-large-small-font-size:          36px !default;
$utility-heading-large-small-line-height:        42px !default;
$utility-heading-large-font-size:                52px !default;
$utility-heading-large-line-height:              64px !default;

$utility-link-muted-color:                       #444 !default;
$utility-link-muted-hover-color:                 #444 !default;

$utility-scrollable-text-height:                 300px !default;

$utility-scrollable-box-height:                  170px !default;
$utility-scrollable-box-padding:                 10px !default;
$utility-scrollable-box-border:                  #ddd !default;
$utility-scrollable-box-border-width:            1px !default;


/* ========================================================================
   Component: Utility
 ========================================================================== */

/* Container
 ========================================================================== */

.sb-container {
    box-sizing: border-box;
    max-width: $utility-container-max-width;
    padding: 0 $utility-container-padding-horizontal;
    @include hook-container();
}

/* Large screen and bigger */
@media (min-width: $breakpoint-xlarge) {

    .sb-container {
        max-width: $utility-container-large-max-width;
        padding: 0 $utility-container-large-padding-horizontal;
    }

}

/*
 * Micro clearfix
 */

.sb-container:before,
.sb-container:after {
    content: "";
    display: table;
}

.sb-container:after { clear: both; }

/*
 * Center container
 */

.sb-container-center {
    margin-left: auto;
    margin-right: auto;
}


/* Clearing
 ========================================================================== */

/*
 * Micro clearfix
* `table-cell` is used with `:before` because `table` creates a 1px gap when it becomes a flex item, only in Webkit
 * `table` is used again with `:after` because `clear` only works with block elements.
 * Note: `display: block` with `overflow: hidden` is currently not working in the latest Safari
 */

.sb-clearfix:before {
    content: "";
    display: table-cell;
}

.sb-clearfix:after {
    content: "";
    display: table;
    clear: both;
}


/*
 *  Create a new block formatting context
 */

.sb-nbfc { overflow: hidden; }

.sb-nbfc-alt {
    display: table-cell;
    width: 10000px;
}


/* Alignment of block elements
 ========================================================================== */

/*
 * Float blocks
 * 1. Prevent content overflow on small devices
 */

.sb-float-left { float: left; }
.sb-float-right { float: right; }

/* 1 */
[class*='sb-float-'] { max-width: 100%; }


/* Alignment of images and objects
 ========================================================================== */

/*
 * Alignment
 */

[class*='sb-align-'] {
    display: block;
    margin-bottom: $utility-align-vertical;
}

.sb-align-left {
    margin-right: $utility-align-horizontal;
    float: left;
}

.sb-align-right {
    margin-left: $utility-align-horizontal;
    float: right;
}

/* Tablet and bigger */
@media (min-width: $breakpoint-medium) {

    .sb-align-medium-left {
        margin-right: $utility-align-horizontal;
        float: left;
    }

    .sb-align-medium-right {
        margin-left: $utility-align-horizontal;
        float: right;
    }

}

.sb-align-center {
    margin-left: auto;
    margin-right: auto;
}


/* Vertical alignment
 ========================================================================== */

/*
 * Remove whitespace between child elements when using `inline-block`
 */

.sb-vertical-align { font-size: 0.001px; }

/*
 *  The `sb-vertical-align` container needs a specific height
 */

.sb-vertical-align:before {
    content: '';
    display: inline-block;
    height: 100%;
    vertical-align: middle;
}

/*
 * Sub-object which can have any height
 * 1. Reset whitespace hack
 */

.sb-vertical-align-middle,
.sb-vertical-align-bottom {
    display: inline-block;
    max-width: 100%;
    /* 1 */
    font-size: 1rem;
}

.sb-vertical-align-middle { vertical-align: middle; }
.sb-vertical-align-bottom { vertical-align: bottom; }


/* Height
 ========================================================================== */

/*
 * More robust if padding and border are used
 */

[class*='sb-height'] { box-sizing: border-box; }

/*
 * Useful to extend the `html` and `body` element to the full height of the page.
 */

.sb-height-1-1 { height: 100%; }

/*
 * Useful to create image teasers
 */

.sb-height-viewport {
    height: 100vh;
    min-height: $utility-height-viewport-min-height;
}


/* Responsive objects
 * Note: Images are already responsive by default, see Base component
 ========================================================================== */

/*
 * 1. Corrects `max-width` and `max-height` behavior if padding and border are used
 */

.sb-responsive-width,
.sb-responsive-height { box-sizing: border-box; }

/*
 * Responsiveness: Sets a maximum width relative to the parent and auto scales the height
 * `important` needed to override `sb-img-preserve img`
 */

.sb-responsive-width {
    max-width: 100% !important;
    height: auto;
}

/*
 * Responsiveness: Sets a maximum height relative to the parent and auto scales the width
 * Only works if the parent element has a fixed height.
 */

.sb-responsive-height {
    max-height: 100%;
    width: auto;
}


/* Margin
 ========================================================================== */

/*
 * Create a block with the same margin of a paragraph
 * Add margin if adjacent element
 */

.sb-margin { margin-bottom: $utility-margin; }
* + .sb-margin { margin-top: $utility-margin; }

.sb-margin-top { margin-top: $utility-margin !important; }
.sb-margin-bottom { margin-bottom: $utility-margin !important; }
.sb-margin-left { margin-left: $utility-margin !important; }
.sb-margin-right { margin-right: $utility-margin !important; }

/*
 * Larger margins
 */

.sb-margin-large { margin-bottom: $utility-margin-large; }
* + .sb-margin-large { margin-top: $utility-margin-large; }

.sb-margin-large-top { margin-top: $utility-margin-large !important; }
.sb-margin-large-bottom { margin-bottom: $utility-margin-large !important; }
.sb-margin-large-left { margin-left: $utility-margin-large !important; }
.sb-margin-large-right { margin-right: $utility-margin-large !important; }

/*
 * Smaller margins
 */

.sb-margin-small { margin-bottom: $utility-margin-small; }
* + .sb-margin-small { margin-top: $utility-margin-small; }

.sb-margin-small-top { margin-top: $utility-margin-small !important; }
.sb-margin-small-bottom { margin-bottom: $utility-margin-small !important; }
.sb-margin-small-left { margin-left: $utility-margin-small !important; }
.sb-margin-small-right { margin-right: $utility-margin-small !important; }

/*
 * Remove margins
 */

.sb-margin-remove { margin: 0 !important; }
.sb-margin-top-remove { margin-top: 0 !important; }
.sb-margin-bottom-remove { margin-bottom: 0 !important; }


/* Padding
 ========================================================================== */

.sb-padding-remove { padding: 0 !important; }
.sb-padding-top-remove { padding-top: 0 !important; }
.sb-padding-bottom-remove { padding-bottom: 0 !important; }

.sb-padding-vertical-remove {
    padding-top: 0 !important;
    padding-bottom: 0 !important;
}

/* Border
 ========================================================================== */

.sb-border-circle { border-radius: 50%; }
.sb-border-rounded { border-radius: $utility-border-rounded; }


/* Headings
 ========================================================================== */

.sb-heading-large {
    font-size: $utility-heading-large-small-font-size;
    line-height: $utility-heading-large-small-line-height;
}

/* Tablet and bigger */
@media (min-width: $breakpoint-medium) {

    .sb-heading-large {
        font-size: $utility-heading-large-font-size;
        line-height: $utility-heading-large-line-height;
    }

}


/* Link
 ========================================================================== */

/*
 * Let links appear in default text color
 */

.sb-link-muted,
.sb-link-muted a { color: $utility-link-muted-color; }

.sb-link-muted:hover,
.sb-link-muted a:hover { color: $utility-link-muted-hover-color; }

/*
 * Reset link style
 */

.sb-link-reset,
.sb-link-reset a,
.sb-link-reset:hover,
.sb-link-reset a:hover,
.sb-link-reset:focus,
.sb-link-reset a:focus {
    color: inherit;
    text-decoration: none;
}


/* Scrollable
 ========================================================================== */

/*
 * Enable scrolling for preformatted text
 */

.sb-scrollable-text {
    height: $utility-scrollable-text-height;
    overflow-y: scroll;
    -webkit-overflow-scrolling: touch;
    resize: both;
}

/*
 * Box with scrolling enabled
 */

.sb-scrollable-box {
    box-sizing: border-box;
    height: $utility-scrollable-box-height;
    padding: $utility-scrollable-box-padding;
    border: $utility-scrollable-box-border-width solid $utility-scrollable-box-border;
    overflow: auto;
    -webkit-overflow-scrolling: touch;
    resize: both;
    @include hook-scrollable-box();
}

.sb-scrollable-box > :last-child { margin-bottom: 0; }


/* Overflow
 ========================================================================== */

.sb-overflow-hidden { overflow: hidden; }

/*
 * Enable scrollbars if content is clipped
 */

.sb-overflow-container {
    overflow: auto;
    -webkit-overflow-scrolling: touch;
}

.sb-overflow-container > :last-child { margin-bottom: 0; }


/* Position
 ========================================================================== */

.sb-position-absolute,
[class*='sb-position-top'],
[class*='sb-position-bottom'] { position: absolute !important; }

/* Don't use `width: 100%` because it is wrong if the parent has padding. */
.sb-position-top {
    top: 0;
    left: 0;
    right: 0;
}

.sb-position-bottom {
    bottom: 0;
    left: 0;
    right: 0;
}

.sb-position-top-left {
    top: 0;
    left: 0;
}

.sb-position-top-right {
    top: 0;
    right: 0;
}

.sb-position-bottom-left {
    bottom: 0;
    left: 0;
}

.sb-position-bottom-right {
    bottom: 0;
    right: 0;
}

/*
 * Cover
 */

.sb-position-cover {
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
}

/*
 * Relative
 */

.sb-position-relative { position: relative !important; }

/*
 * Z-index
 */

.sb-position-z-index { z-index: 1; }


/* Display
 ========================================================================== */

/*
 * Display
 * 1. Required if child is a responsive image
 */

.sb-display-block { display: block !important; }
.sb-display-inline { display: inline !important; }

.sb-display-inline-block {
    display: inline-block !important;
    /* 1 */
    max-width: 100%;
}

/*
 * Visibility
 * Avoids setting display to `block` so it works also with `inline-block` and `table`
 */

/* Desktop and bigger */
@media (min-width: $breakpoint-large) {

    .sb-visible-small { display: none !important; }
    .sb-visible-medium { display: none !important; }
    .sb-hidden-large { display: none !important; }

}

/* Tablets portrait */
@media (min-width: $breakpoint-medium) and (max-width: $breakpoint-medium-max) {

    .sb-visible-small { display: none !important; }
    .sb-visible-large { display: none !important ; }
    .sb-hidden-medium { display: none !important; }

}

/* Phone landscape and smaller*/
@media (max-width: $breakpoint-small-max) {

    .sb-visible-medium { display: none !important; }
    .sb-visible-large { display: none !important; }
    .sb-hidden-small { display: none !important; }

}

/* Remove from the flow and screen readers on any device */
.sb-hidden {
    display: none !important;
    visibility: hidden !important;
}

/* It's hidden, but still affects layout */
.sb-invisible { visibility: hidden !important; }

/* Show on hover */
.sb-visible-hover:hover .sb-hidden,
.sb-visible-hover:hover .sb-invisible {
    display: block !important;
    visibility: visible !important;
}

.sb-visible-hover-inline:hover .sb-hidden,
.sb-visible-hover-inline:hover .sb-invisible {
    display: inline-block !important;
    visibility: visible !important;
}

/* Hide on touch */
.sb-touch .sb-hidden-touch,
.sb-notouch .sb-hidden-notouch { display: none !important; }


// Hooks
// ========================================================================

@include hook-utility-misc();

// @mixin hook-container(){}
// @mixin hook-scrollable-box(){}
// @mixin hook-utility-misc(){}
